Import 'matrix_divided' from "2-matrix_divided.py" module
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

matrix of integers
>>> matrix_divided([[2, 4, 6], [8, 3, 5]], 2)
[[1.0, 2.0, 3.0], [4.0, 1.5, 2.5]]

wrong size
>>> matrix_divided([[3, 4, 5], [2, 1]], 9)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

div equal to zero
>>> matrix_divided([[2, 3, 4], [2, 6, 8]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

passing string to the matrix instead of int
>>> matrix_divided([[2, 3, 4], [5, 6, "element"]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

passing one argument
>>> matrix_divided(None, 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

must raise error
>>> matrix_divided({}, 9)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

must raise error if a str is passed
>>> matrix_divided('khalil', 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

must raise error
>>> matrix_divided([[5, 6, 7], [1, 3, 7], [9, 8, 2]], None)
Traceback (most recent call last):
    ...
TypeError: unsupported operand type(s) for /: 'int' and 'NoneType'
